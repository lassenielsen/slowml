#include <iostream>
#include <iomanip>
#include <vector>
#include <fstream>
#include <sstream>
#include <cstdlib>

using namespace std;

const size_t cols=400;
const size_t rows=1000;
int main(int argc, char **argv)
{ // Define image
  vector<double> img;
  img.push_back(1.0);
  for (size_t i=0; i<cols*rows; ++i)
    img.push_back(0.0);

  // draw a 6 at pos (300,600) with height and width=56
  //x: 00000000011111111112222222
  //x: 12345678901234567890123456
  //01 00000000446600000000000000
  //02 00000022998800000000000000
  //03 00000033997700000000000000
  //04 00000033994400000000000000
  //05 00000033993300000000000000
  //06 00000066990000000000000000
  //07 00003399990000000000000000
  //08 00006699990000000000000000
  //09 00008899330000000000000000
  //10 00449977000000000000000000
  //11 00889966000000000000000000
  //12 00999922000000000044778888
  //13 44998800000000449999999999
  //14 44996600001188999977227799
  //15 44993300008899882200339988
  //16 44993300009999440000889933
  //17 11998811009999664499996600
  //18 00889988669999999999440000
  //19 00117799999999999933000000
  //20 00000022557755441100000000
  #define setpix(x,y,v) img[1+cols*y+x]=v
  // 01 {{{
  setpix(309,601,0.4);
  setpix(310,601,0.4);
  setpix(311,601,0.6);
  setpix(312,601,0.6);
  // }}}
  // 02 {{{
  setpix(307,602,0.2);
  setpix(308,602,0.2);
  setpix(309,602,0.9);
  setpix(310,602,0.9);
  setpix(311,602,0.8);
  setpix(312,602,0.8);
  // }}}
  // 03 {{{
  setpix(307,603,0.3);
  setpix(308,603,0.3);
  setpix(309,603,0.9);
  setpix(310,603,0.9);
  setpix(311,603,0.7);
  setpix(312,603,0.7);
  // }}}
  // 04 {{{
  setpix(307,604,0.3);
  setpix(308,604,0.3);
  setpix(309,604,0.9);
  setpix(310,604,0.9);
  setpix(311,604,0.4);
  setpix(312,604,0.4);
  // }}}
  // 05 {{{
  setpix(307,605,0.3);
  setpix(308,605,0.3);
  setpix(309,605,0.9);
  setpix(310,605,0.9);
  setpix(311,605,0.3);
  setpix(312,605,0.3);
  // }}}
  // 06 {{{
  setpix(307,606,0.6);
  setpix(308,606,0.6);
  setpix(309,606,0.9);
  setpix(310,606,0.9);
  // }}}
  // 07 {{{
  setpix(305,607,0.3);
  setpix(306,607,0.3);
  setpix(307,607,0.9);
  setpix(308,607,0.9);
  setpix(309,607,0.9);
  setpix(310,607,0.9);
  // }}}
  // 08 {{{
  setpix(305,608,0.6);
  setpix(306,608,0.6);
  setpix(307,608,0.9);
  setpix(308,608,0.9);
  setpix(309,608,0.9);
  setpix(310,608,0.9);
  // }}}
  // 09 {{{
  setpix(305,609,0.8);
  setpix(306,609,0.8);
  setpix(307,609,0.9);
  setpix(308,609,0.9);
  setpix(309,609,0.3);
  setpix(310,609,0.3);
  // }}}
  // 10 {{{
  setpix(303,610,0.4);
  setpix(304,610,0.4);
  setpix(305,610,0.9);
  setpix(306,610,0.9);
  setpix(307,610,0.7);
  setpix(308,610,0.7);
  // }}}
  // 11 {{{
  setpix(303,611,0.8);
  setpix(304,611,0.8);
  setpix(305,611,0.9);
  setpix(306,611,0.9);
  setpix(307,611,0.6);
  setpix(308,611,0.6);
  // }}}
  // 12 {{{
  setpix(303,612,0.9);
  setpix(304,612,0.9);
  setpix(305,612,0.9);
  setpix(306,612,0.9);
  setpix(307,612,0.2);
  setpix(308,612,0.2);

  setpix(319,612,0.4);
  setpix(320,612,0.4);
  setpix(321,612,0.7);
  setpix(322,612,0.7);
  setpix(323,612,0.8);
  setpix(324,612,0.8);
  setpix(325,612,0.8);
  setpix(326,612,0.8);
  // }}}
  // 13 {{{
  setpix(301,613,0.4);
  setpix(302,613,0.4);
  setpix(303,613,0.9);
  setpix(304,613,0.9);
  setpix(305,613,0.8);
  setpix(306,613,0.8);

  setpix(315,613,0.4);
  setpix(316,613,0.4);
  setpix(317,613,0.9);
  setpix(318,613,0.9);
  setpix(319,613,0.9);
  setpix(320,613,0.9);
  setpix(321,613,0.9);
  setpix(322,613,0.9);
  setpix(323,613,0.9);
  setpix(324,613,0.9);
  setpix(325,613,0.9);
  setpix(326,613,0.9);
  // }}}
  // 14 {{{
  setpix(301,614,0.4);
  setpix(302,614,0.4);
  setpix(303,614,0.9);
  setpix(304,614,0.9);
  setpix(305,614,0.6);
  setpix(306,614,0.6);

  setpix(311,614,0.1);
  setpix(312,614,0.1);
  setpix(313,614,0.8);
  setpix(314,614,0.8);
  setpix(315,614,0.9);
  setpix(316,614,0.9);
  setpix(317,614,0.9);
  setpix(318,614,0.9);
  setpix(319,614,0.7);
  setpix(320,614,0.7);
  setpix(321,614,0.2);
  setpix(322,614,0.2);
  setpix(323,614,0.7);
  setpix(324,614,0.7);
  setpix(325,614,0.9);
  setpix(326,614,0.9);
  // }}}
  // 15 {{{
  setpix(301,615,0.4);
  setpix(302,615,0.4);
  setpix(303,615,0.9);
  setpix(304,615,0.9);
  setpix(305,615,0.3);
  setpix(306,615,0.3);

  setpix(311,615,0.8);
  setpix(312,615,0.8);
  setpix(313,615,0.9);
  setpix(314,615,0.9);
  setpix(315,615,0.8);
  setpix(316,615,0.8);
  setpix(317,615,0.2);
  setpix(318,615,0.2);

  setpix(321,615,0.3);
  setpix(322,615,0.3);
  setpix(323,615,0.9);
  setpix(324,615,0.9);
  setpix(325,615,0.8);
  setpix(326,615,0.8);
  // }}}
  // 16 {{{
  setpix(301,616,0.4);
  setpix(302,616,0.4);
  setpix(303,616,0.9);
  setpix(304,616,0.9);
  setpix(305,616,0.3);
  setpix(306,616,0.3);

  setpix(311,616,0.9);
  setpix(312,616,0.9);
  setpix(313,616,0.9);
  setpix(314,616,0.9);
  setpix(315,616,0.4);
  setpix(316,616,0.4);

  setpix(321,616,0.8);
  setpix(322,616,0.8);
  setpix(323,616,0.9);
  setpix(324,616,0.9);
  setpix(325,616,0.3);
  setpix(326,616,0.3);
  // }}}
  // 17 {{{
  setpix(301,617,0.1);
  setpix(302,617,0.1);
  setpix(303,617,0.9);
  setpix(304,617,0.9);
  setpix(305,617,0.8);
  setpix(306,617,0.8);
  setpix(307,617,0.1);
  setpix(308,617,0.1);

  setpix(311,617,0.9);
  setpix(312,617,0.9);
  setpix(313,617,0.9);
  setpix(314,617,0.9);
  setpix(315,617,0.6);
  setpix(316,617,0.6);
  setpix(317,617,0.4);
  setpix(318,617,0.4);
  setpix(319,617,0.9);
  setpix(320,617,0.9);
  setpix(321,617,0.9);
  setpix(322,617,0.9);
  setpix(323,617,0.6);
  setpix(324,617,0.6);
  // }}}
  // 18 {{{
  setpix(303,618,0.8);
  setpix(304,618,0.8);
  setpix(305,618,0.9);
  setpix(306,618,0.9);
  setpix(307,618,0.8);
  setpix(308,618,0.8);
  setpix(309,618,0.6);
  setpix(310,618,0.6);
  setpix(311,618,0.9);
  setpix(312,618,0.9);
  setpix(313,618,0.9);
  setpix(314,618,0.9);
  setpix(315,618,0.9);
  setpix(316,618,0.9);
  setpix(317,618,0.9);
  setpix(318,618,0.9);
  setpix(319,618,0.9);
  setpix(320,618,0.9);
  setpix(321,618,0.4);
  setpix(322,618,0.4);
  // }}}
  // 19 {{{
  setpix(303,619,0.1);
  setpix(304,619,0.1);
  setpix(305,619,0.7);
  setpix(306,619,0.7);
  setpix(307,619,0.9);
  setpix(308,619,0.9);
  setpix(309,619,0.9);
  setpix(310,619,0.9);
  setpix(311,619,0.9);
  setpix(312,619,0.9);
  setpix(313,619,0.9);
  setpix(314,619,0.9);
  setpix(315,619,0.9);
  setpix(316,619,0.9);
  setpix(317,619,0.9);
  setpix(318,619,0.9);
  setpix(319,619,0.3);
  setpix(320,619,0.3);
  // }}}
  // 20 {{{
  setpix(307,620,0.2);
  setpix(308,620,0.2);
  setpix(309,620,0.5);
  setpix(310,620,0.5);
  setpix(311,620,0.7);
  setpix(312,620,0.7);
  setpix(313,620,0.5);
  setpix(314,620,0.5);
  setpix(315,620,0.4);
  setpix(316,620,0.4);
  setpix(317,620,0.1);
  setpix(318,620,0.1);
  // }}}

  size_t dim=rows*cols+1;

  ofstream fout("img.vec");
  fout.write((const char*)&dim,sizeof(size_t));
  for (size_t i=0; i<img.size(); ++i)
    fout.write((const char*)&img[i],sizeof(double));
  fout.close();

  return 0;
}
